/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     nonNewtonianIcoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         2;

deltaT          0.0025;

writeControl    runTime;

writeInterval   0.05;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

libs
   (
        "libCrossLaw.so"
   );

functions 
( 
    str 
    { 
        functionObjectLibs ("libutilityFunctionObjects.so"); 
        type coded; 
        redirectType strRate; // arbitral name

        //outputControl outputTime;

        outputControl   timeStep;
        outputInterval  1; 

        code 
        #{ 
            const volVectorField& U = mesh().lookupObject<volVectorField>("U");
            static autoPtr<volScalarField> pField;

            if(!pField.valid())
            {
                Info << "Creating strRatio" << nl;
                pField.set
                (
                        new volScalarField
                        (
                             IOobject
                             (
                                 "strRatio",
                                  mesh().time().timeName(),
                                  U.mesh(),
                                  IOobject::NO_READ,
                                  IOobject::AUTO_WRITE
                             ),
                             Foam::sqrt(2.0)*mag(symm(fvc::grad(U)))
                        )
                );
            }

            volScalarField &strRatio = pField();

            strRatio.checkIn();

            strRatio = Foam::sqrt(2.0)*mag(symm(fvc::grad(U)));

            Info<<"strRate avg:" << average(strRatio) << endl; 

        #}; 
    } 
); 

// ************************************************************************* //
